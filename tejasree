1)disk scheduling

#include <stdio.h>
#include <stdlib.h>

int main() {
int n, head, seek_time = 0,request_queue[n];

printf("Enter the number of disk requests: "); 
scanf("%d", &n);

printf("Enter the disk request queue:\n");
for (int i = 0; i < n; i++) {
scanf("%d", &request_queue[i]);
}

printf("Enter the initial position of the disk head: ");
scanf("%d", &head);

printf("\nFCFS Disk Scheduling:\n");
 
printf("Head Movement Sequence: %d", head);
 for (int i = 0; i < n; i++) {
seek_time += abs(head - request_queue[i]);
head = request_queue[i];
printf(" -> %d", head);
}

printf("\nTotal Seek Time: %d\n", seek_time);
printf("Average Seek Time: %.2f\n", (float) seek_time / n);

return 0;
}


2)cpu scheduling

#include <stdio.h>
int main()
{
    int pid[15];
    int bt[15];
    int n;
    printf("Enter the number of processes: ");
    scanf("%d",&n);
    printf("Enter process id of all the processes: ");
    for(int i=0;i<n;i++)
    {
        scanf("%d",&pid[i]);
    }
    printf("Enter burst time of all the processes: ");
    for(int i=0;i<n;i++)
    {
        scanf("%d",&bt[i]);
    }
    int i, wt[n];
    wt[0]=0;
    for(i=1; i<n; i++)
    {
        wt[i]= bt[i-1]+ wt[i-1];
    }
    printf("Process ID     Burst Time     Waiting Time     TurnAround Time\n");
    float twt=0.0;
    float tat= 0.0;
    for(i=0; i<n; i++)
    {
        printf("%d\t\t", pid[i]);
        printf("%d\t\t", bt[i]);
        printf("%d\t\t", wt[i]);
        printf("%d\t\t", bt[i]+wt[i]);
        printf("\n");
        twt += wt[i];
        tat += (wt[i]+bt[i]);
    }
    float att,awt;
    awt = twt/n;
    att = tat/n;
    printf("Avg. waiting time= %f\n",awt);
    printf("Avg. turnaround time= %f",att);
}


3)page replacement


#include<stdio.h>
#include<conio.h>
main()
{
    int i,j,k,l,m,n,p=15,c=0;
    int a[20],b[20],q,min=50;
    printf("enter no. of reference string: ");
    scanf("%d",&n);
    printf("enter size of frame: ");
    scanf("%d",&m);
    printf("enter the elements of ref. string: \n");
    for(i=0; i<n; i++)
        scanf("%d",&a[i]);
    for(j=0; j<m; j++)
        b[j]=-1; 
    for(i=0; i<n; i++)
    {
        for(j=0; j<m; j++)
        {
            if(a[i]==b[j])
                break;
            else
                continue;
        }
        if(j==m)
        {
            for(k=0; k<m; k++)
                if(b[k]==-1)
                {
                    b[k]=a[i];
                    break;
                }
            if(k==m)
            {
                min=50;
                for(j=0; j<m; j++)
                {
                    l=i-1;
                    while(l>=0)
                    {
                        if(a[l]==b[j])
                        {
                            if(l<min)
                            {
                                min=l;
                                p=j;
                            }
                            break;
                        }
                        l--;
                    }
                }
            }
            b[p]=a[i];
            c++;
        }
        printf("\n\n");
        for(k=0; k<m; k++)
            printf(" %d",b[k]);
    }
    printf("\n No of page fault is:%d",c);
    getch();
}
